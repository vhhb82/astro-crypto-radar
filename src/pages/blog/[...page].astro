```astro
---
import { getCollection } from 'astro:content';
import Base from '../../layouts/Base.astro';


export async function getStaticPaths({ paginate }) {
const posts = (await getCollection('blog'))
.filter((p) => !p.data.draft)
.sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf());
return paginate(posts, { pageSize: 10 });
}


const { page } = Astro.props;
const title = 'Blog — Crypto Radar';
const description = 'Strategii, idei și analize pentru crypto.';
const url = new URL('/blog/', Astro.site ?? 'https://exemplu.ro').toString();
---
<Base {title} {description} {url}>
<h1 style="margin:24px 0">Blog</h1>
<ul style="list-style:none;padding:0;margin:0;display:grid;gap:16px">
{page.data.map((p) => (
<li style="border:1px solid #0001;border-radius:12px;padding:16px">
<a href={`/blog/${p.slug}/`} style="text-decoration:none;color:inherit">
<h3 style="margin:0 0 6px 0">{p.data.title}</h3>
<p style="margin:0 0 6px 0;opacity:.75">{new Date(p.data.pubDate).toLocaleDateString('ro-RO')} • {p.data.author}</p>
<p style="margin:0;opacity:.8">{p.data.description}</p>
{p.data.tags?.length ? (<p class="small" style="margin:.5rem 0 0 0;opacity:.7">{p.data.tags.join(' • ')}</p>) : null}
</a>
</li>
))}
</ul>


<nav style="display:flex;gap:8px;justify-content:center;margin:24px 0">
{page.url.prev && <a href={page.url.prev} rel="prev">← Articole mai noi</a>}
{page.url.next && <a href={page.url.next} rel="next">Articole mai vechi →</a>}
</nav>
</Base>
```